name: Deploy to Stage

on:
  push:
    branches:
      - dev
      - feature/cicd-setup
  workflow_run:
    workflows: ["Build and push Docker image"]
    types: [completed]
    branches:
      - dev
      - feature/cicd-setup

env:
  IMAGE_NAME: studio-yandex-practicum/tabit

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List available artifacts
        run:  ls -la /home/runner/work/_temp/

      - name: Download Docker image tar from GitHub Artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_and_push.yaml
          name: docker-image
          path: .

      - name: Check if image.tar exists
        run: ls -la .

      - name: Copy Docker image tar to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "image.tar"
          target: "/home/${{ secrets.USERNAME }}/"

      - name: Load Docker image on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load -i /home/${{ secrets.USERNAME }}/image.tar
            docker tag ghcr.io/${{ env.IMAGE_NAME }}:latest ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Stopping old containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if systemctl list-units --full -all | grep -q "tabit.service"; then
              STATUS="$(systemctl is-active tabit.service)"
              if [ "${STATUS}" = "active" ]; then
                sudo systemctl stop tabit.service
                echo "Stopping old containers"
              else
                echo "No active containers"
              fi
            else
              echo "Service tabit.service does not exist, skipping stop"
            fi

      - name: Clean infra folder before copying
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            find /home/${{ secrets.USERNAME }}/tabit -mindepth 1 -maxdepth 1 ! -name ".ssh" -exec rm -rf {} +
            mkdir -p /home/${{ secrets.USERNAME }}/tabit

      - name: Copy infra via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "infra/,pyproject.toml,poetry.lock"
          target: "/home/${{ secrets.USERNAME }}/tabit/"
          rm: false

      - name: Configure environment variables on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.USERNAME }}/tabit/infra/stage/
            touch .env
            if [[ -z "${{ secrets.ENV_FILE }}" ]]; then
              echo "Error: ENV_FILE is not set!"
              exit 1
            fi
            echo "${{ secrets.ENV_FILE }}" > .env

      - name: Pull latest Docker image from GHCR
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 60m
          script: |
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            if docker inspect ghcr.io/${{ env.IMAGE_NAME }}:latest >/dev/null 2>&1; then
              echo "Image exists locally, skipping pull."
            else
              echo "Pulling latest image from GHCR..."
              docker pull ghcr.io/${{ env.IMAGE_NAME }}:latest
            fi

      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.USERNAME }}/tabit/infra/stage/
            sudo systemctl daemon-reload
            sudo systemctl restart tabit.service
            docker compose -f docker-compose.stage.yaml down
            docker compose -f docker-compose.stage.yaml pull
            docker compose -f docker-compose.stage.yaml up -d --force-recreate

      - name: Run database migrations inside container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker exec -it tabit poetry run alembic upgrade head

      - name: Delete unnecessary files (after deploy)
        run: |
          rm -rf tabit/infra/stage
          rm -rf tabit/infra/dev
