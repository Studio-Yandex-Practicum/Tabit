"""UserTabit, TagUser, AssociationUserTags

Revision ID: 02
Revises: 01
Create Date: 2025-01-25 02:13:10.996751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '02'
down_revision: Union[str, None] = '01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taguser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('usertabit',
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('telegram_username', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'EMPLOYEE', name='roleusertabit'), nullable=False),
    sa.Column('start_date_employment', sa.Date(), nullable=False),
    sa.Column('end_date_employment', sa.Date(), nullable=False),
    sa.Column('department_transition_date', sa.Date(), nullable=False),
    sa.Column('employee_position', sa.String(), nullable=False),
    sa.Column('avatar_link', sa.String(length=2048), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('surname', sa.String(length=100), nullable=False),
    sa.Column('patronymic', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_username')
    )
    op.create_index(op.f('ix_usertabit_email'), 'usertabit', ['email'], unique=True)
    op.create_table('associationusertags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('left_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('right_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['left_id'], ['usertabit.id'], ),
    sa.ForeignKeyConstraint(['right_id'], ['taguser.id'], ),
    sa.PrimaryKeyConstraint('id', 'left_id', 'right_id'),
    sa.UniqueConstraint('id')
    )
    op.create_unique_constraint(None, 'licensetype', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'licensetype', type_='unique')
    op.drop_table('associationusertags')
    op.drop_index(op.f('ix_usertabit_email'), table_name='usertabit')
    op.drop_table('usertabit')
    op.drop_table('taguser')
    # ### end Alembic commands ###
