"""add transfer_counter to Task model

Revision ID: 06
Revises: 05
Create Date: 2025-03-03 02:18:03.222499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '06'
down_revision: Union[str, None] = '05'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('associationusercomment_left_id_right_id_key', 'associationusercomment', type_='unique')
    op.drop_constraint('associationusertask_left_id_fkey', 'associationusertask', type_='foreignkey')
    op.drop_constraint('associationusertask_right_id_fkey', 'associationusertask', type_='foreignkey')
    op.create_foreign_key(None, 'associationusertask', 'task', ['right_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'associationusertask', 'usertabit', ['left_id'], ['id'], ondelete='CASCADE')
    op.add_column('meeting', sa.Column('transfer_counter', sa.Integer(), nullable=False))
    op.drop_column('meeting', 'transger_counter')
    op.add_column('task', sa.Column('transfer_counter', sa.Integer(), nullable=False))
    op.drop_constraint('task_problem_id_fkey', 'task', type_='foreignkey')
    op.create_foreign_key(None, 'task', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.create_foreign_key('task_problem_id_fkey', 'task', 'problem', ['problem_id'], ['id'])
    op.drop_column('task', 'transfer_counter')
    op.add_column('meeting', sa.Column('transger_counter', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('meeting', 'transfer_counter')
    op.drop_constraint(None, 'associationusertask', type_='foreignkey')
    op.drop_constraint(None, 'associationusertask', type_='foreignkey')
    op.create_foreign_key('associationusertask_right_id_fkey', 'associationusertask', 'task', ['right_id'], ['id'])
    op.create_foreign_key('associationusertask_left_id_fkey', 'associationusertask', 'usertabit', ['left_id'], ['id'])
    op.create_unique_constraint('associationusercomment_left_id_right_id_key', 'associationusercomment', ['left_id', 'right_id'])
    # ### end Alembic commands ###
